Author: Jordan Lee, Jiatao Fan

The goal of this project is about implementing the process to localize handle-like grasp affordances in 3D point clouds.

Implementation

First, we randomly sampled a certain number of neighborhoods in the point cloud. This is done by first randomly sampling some points among the point cloud. We set these points as centers and form many spheres with a certain radius, and we include all the points that are within a sphere as one neighborhood. Then we fit a quadratic surface to each of the neighborhood with Taubin fit. After that, we calculate the median curvature among all the maximum principal curvatures of each point and we use the corresponding normal and principal direction to calculate axis which we will use for the axis of cylindrical shell. Since we want the curvature of the object surface to be large enough to let the robot hand to grasp, we rule out the neighborhood with median curvature below some threshold. Then we project each neighborhood onto a plane orthogonal to the axis calculated earlier, and fit a circle to the points. Then we set the center of the circle as the center of the cylindrical shell and the outline of the circle as the inner shell of the cylindrical shell and do linear search to find an outer shell so that between inner and outer shell, there is a gap that is wide enough to let robot hand to fit in.

Testing

     In order to test the principle direction of surface curvature, we generated cylinder point clouds. Then, we drew vectors representing each principle axes and normal originated from the median point corresponding to median curvature value. After validating the quadratic fit, we applied the process on the actual point clouds data from FETCH Robot. For the demonstration, we placed one cylindrical object on the desk and the robot collected the point clouds data from the 3D RGB depth sensor. From the point clouds acquired by the robot, we sampled 1000 neighborhood centroids (center of the neighborhood points) by using “datasample” function in Matlab (The Mathworks, Inc., Natick, MA). This function samples the points randomly. By selecting one group of neighborhood points, we performed quadratic fit and acquired principle axis for the neighborhood. Next, we projected the points to the plane orthogonal to the minor principle axis. For these projected points, we fitted circle and calculated the center which is also the center of the 3D cylindrical shell. By applying the threshold of curvature, it eliminated the neighborhood which is below the threshold. In this demonstration, the neighborhood except the points around the cylinder was discarded. Lastly, we applied handle search algorithm which reduced the false positives of handles. After we processed the whole algorithm, we sent the normal, minor principle axis of the selected neighborhood centroid on the cylinder ( among neighborhood centroid on the cylinder, chose the highest neighborhood centroid from the surface of the desk ) and the neighborhood centroid point itself. By given the three information, the end effector of the robot was aligned with the normal axis and approached to the object along the normal axis. When the end effector was reached at the point given, the object was grasped by the robot.

Conclusion

     The report shows the re-implementation of the ‘Localizing Handle-like Grasp Affordances in 3D Point Clouds (Pas,Platt ,2014)’. Our results verified the validity of the method presented in the paper by demonstrating using FETCH Robot. Several mismatch between ROS package (A. ten Pas and R. Platt. Handle detector ROS package) and the article was found during the re-implementation. However, as the above work described was non-real time, next goal is to make the grasping process robust to perform in real time. Furthermore, grasping task with multiple objects and various shapes should be tested.
